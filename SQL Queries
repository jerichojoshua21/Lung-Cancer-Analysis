SELECT
	(SELECT COUNT(*) FROM lung_cancer_data) AS RowCounts,
	(SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS
	WHERE TABLE_SCHEMA = 'lung_cancer' AND TABLE_NAME = 'lung_cancer_data') AS ColumnCounts
;

CREATE TABLE lung_cancer_data1
LIKE lung_cancer_data
;

INSERT lung_cancer_data1
SELECT *
FROM lung_cancer_data
;

DESC lung_cancer_data1
;

SELECT*
FROM lung_cancer_data1
;
------ BASIC_LEVEL ------
-- 1. Retrieve all records for individuals diagnosed with lung cancer.
SELECT *
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis = 'Yes'
;
-- 2. Count the number of smokers and non-smokers. In this question I used CASE statement to identify the counts of smokers and non-smokers.
SELECT
	SUM(CASE
		WHEN Smoker LIKE 'Yes' THEN 1 ELSE 0 END) AS Smokers,
	SUM(CASE
        WHEN Smoker LIKE 'No' THEN 1 ELSE 0 END) AS `Non Smoker`
FROM lung_cancer_data1
;
-- 3. List all unique cancer stages present in the dataset.
SELECT DISTINCT Cancer_Stage
FROM lung_cancer_data1
WHERE Cancer_Stage != 'None'
;
-- 4. Retrieve the average number of cigarettes smoked per day by smokers.
SELECT AVG(Cigarettes_per_Day) AS `Average Cigarette Per Day`
FROM lung_cancer_data1
;
-- 5. Count the number of people exposed to high air pollution.
SELECT COUNT(Population_Size) AS `High Exposed`, Air_Pollution_Exposure
FROM lung_cancer_data1
WHERE Air_Pollution_Exposure LIKE 'High'
GROUP BY Air_Pollution_Exposure
;
-- 6. Find the top 5 countries with the highest lung cancer deaths.
SELECT DISTINCT Country, Annual_Lung_Cancer_Deaths
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis LIKE 'Yes'
ORDER BY Annual_Lung_Cancer_Deaths DESC
LIMIT 5
;
-- 7. Count the number of people diagnosed with lung cancer by gender.
SELECT Gender, COUNT(Lung_Cancer_Diagnosis) AS Counts
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis LIKE 'Yes'
GROUP BY Gender, Lung_Cancer_Diagnosis
;
-- This query only serves as a basis for the total count of people diagnosed with lung cancer.
SELECT COUNT(Lung_Cancer_Diagnosis)
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis LIKE 'Yes'
;
-- 8. Retrieve records of individuals older than 60 who are diagnosed with lung cancer.
SELECT ID, Age, Lung_Cancer_Diagnosis
FROM lung_cancer_data1
WHERE Age > 60
AND Lung_Cancer_Diagnosis LIKE 'Yes'
;
------ INTERMEDIATE_LEVEL ------
-- 1. Find the percentage of smokers who developed lung cancer.
SELECT 
    ROUND(
		(COUNT(CASE 
			WHEN Smoker = 'Yes' THEN 1
			WHEN Lung_Cancer_Diagnosis = 'Yes' THEN 1 END)
			* 100.0 / COUNT(*)), 2) AS `% of Smoker with Lung Cancer`
FROM lung_cancer_data1
;
SELECT *
FROM lung_cancer_data1
;

SELECT COUNT(Smoker)
FROM lung_cancer_data1
WHERE Smoker = 'Yes'
;
-- 2. Calculate the average survival years based on cancer stages.
SELECT Cancer_Stage, AVG(Survival_Years) `Average Survival Years`
FROM lung_cancer_data1
WHERE Cancer_Stage != 'None'
GROUP BY Cancer_Stage
ORDER BY Cancer_Stage ASC
;
-- 3. Count the number of lung cancer patients based on passive smoking.
SELECT Passive_Smoker, COUNT(Lung_Cancer_Diagnosis) AS `Passive Smoker Who Developed Lung Cancer`
FROM lung_cancer_data1
WHERE Passive_Smoker = 'Yes'
;
-- 4. Find the country with the highest lung cancer prevalence rate.
SELECT Country, MAX(Lung_Cancer_Prevalence_Rate) AS `Highest Prevalence Rate`
FROM lung_cancer_data1
GROUP BY Country
ORDER BY `Highest Prevalence Rate` DESC
;
-- with this query, i just checked the cancer prevalence rate.
SELECT DISTINCT Lung_Cancer_Prevalence_Rate
FROM lung_cancer_data1
ORDER BY Lung_Cancer_Prevalence_Rate DESC
;
-- 5. Identify the smoking years impact on lung cancer.
SELECT Years_of_Smoking, COUNT(*) AS `Smoking Years Impact`
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis = 'Yes'
GROUP BY Years_of_Smoking
ORDER BY Years_of_Smoking ASC
;
-- 6. Determine the mortality rate for patients with and without early detection.
SELECT
	Early_Detection,
    COUNT(*) AS `Total Patients`, -- Counts of patients by Early Detection
		SUM(CASE WHEN Mortality_Rate = 'Yes' THEN 1 ELSE 0 END) AS `Deceased`,
		(SUM(CASE WHEN Mortality_Rate = 'Yes' THEN 1 ELSE 0 END) * 100.0/COUNT(*)) AS `Rate`
FROM lung_cancer_data1
GROUP BY Early_Detection
;
SELECT Early_Detection,
	COUNT(CASE WHEN Lung_Cancer_Diagnosis = 'Yes' AND Survival_Years = 1 THEN 1 END) * 100 /
	COUNT(CASE WHEN Lung_Cancer_Diagnosis = 'Yes' THEN 1 END) AS `Mortality Rate`
FROM lung_cancer_data1
GROUP BY Early_Detection
;
-- 7. Group the lung cancer prevalence rate by developed vs. developing countries.
SELECT
	Country, Developed_or_Developing, ROUND(AVG(Lung_Cancer_Prevalence_Rate), 2) AS `Prevalence Rate`
FROM lung_cancer_data1
GROUP BY Developed_or_Developing, Country
ORDER BY Developed_or_Developing
;
------ ADVANCED_LEVEL ------
-- 1. Identify the correlation between lung cancer prevalence and air pollution levels.
SELECT 
    Air_Pollution_Exposure, 
	ROUND(AVG(Lung_Cancer_Prevalence_Rate), 5) AS `Average Prevalence`
FROM lung_cancer_data1
GROUP BY Air_Pollution_Exposure
ORDER BY Air_Pollution_Exposure
;
SELECT Lung_Cancer_Prevalence_Rate, Air_Pollution_Exposure
FROM lung_cancer_data1
ORDER BY Air_Pollution_Exposure
LIMIT 10
;
-- 2. Find the average age of lung cancer patients for each country.
SELECT DISTINCT Country, ROUND(AVG(Age)) AS `Average Age of Lung Cancer Patients`
FROM lung_cancer_data1
GROUP BY Country
;
-- 3. Calculate the risk factor of lung cancer by smoker status, passive smoking, and family history.
SELECT COUNT(*) AS `Risk Factor`, Smoker, Passive_Smoker, Family_History
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis = 'Yes'
GROUP BY Smoker, Passive_Smoker, Family_History
ORDER BY `Risk Factor` DESC
;
-- 4. Rank countries based on their mortality rate.
-- In this query I used CTE to generate the 'Death Rate' and included a CASE statement to get the rankings of countries
WITH MortalityByCountry AS (
    SELECT 
        Country, 
        SUM(CASE WHEN Lung_Cancer_Diagnosis = 'Yes' THEN 1 ELSE 0 END),
        ROUND(SUM(Lung_Cancer_Prevalence_Rate), 2) / COUNT(*) AS `Death Rate`
    FROM lung_cancer_data1
    GROUP BY Country
)
SELECT 
    RANK() OVER(ORDER BY `Death Rate` DESC) AS `Rank of Countries`, 
    Country,
    `Death Rate`
FROM MortalityByCountry
;
-- 5. Determine if treatment type has a significant impact on survival years.
SELECT Treatment_Type, AVG(Survival_Years) AS `Surviving Years`
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis = 'Yes'
GROUP BY Treatment_Type
;
-- 6. Compare lung cancer prevalence in men vs. women across countries.
SELECT Country,
		ROUND(AVG(CASE WHEN Gender LIKE 'Male' THEN Lung_Cancer_Prevalence_Rate END), 2) AS Male,
		ROUND(AVG(CASE WHEN Gender LIKE 'Female' THEN Lung_Cancer_Prevalence_Rate END), 2) AS Female
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis = 'Yes'
GROUP BY Country
ORDER BY Country
;
-- 7. Find how occupational exposure, smoking, and air pollution collectively impact lung cancer rates.
-- By including the average of Lung_Cancer_Prevalence_Rate, we are able to retrieve the Lung cancer rate.
SELECT Occupational_Exposure,
		Smoker,
        Air_Pollution_Exposure,
        ROUND(AVG(Lung_Cancer_Prevalence_Rate), 2) AS `Lung Cancer Rates`
FROM lung_cancer_data1
WHERE	Lung_Cancer_Diagnosis = 'Yes'
GROUP BY Occupational_Exposure,
		Smoker,
		Air_Pollution_Exposure
;
-- 8. Analyze the impact of early detection on survival years.
SELECT Early_Detection, AVG(Survival_Years) AS `Survival Years`
FROM lung_cancer_data1
WHERE Lung_Cancer_Diagnosis = 'Yes'
GROUP BY Early_Detection
ORDER BY `Survival Years` DESC
;
-- Adding Risk_Score into the table for Data Visualization Purpose
SELECT *
FROM (
    SELECT *,
        (CASE WHEN Smoker = 'Yes' THEN 3 ELSE 0 END +
         CASE WHEN Passive_Smoker = 'Yes' THEN 2 ELSE 0 END +
         CASE WHEN Family_History = 'Yes' THEN 2 ELSE 0 END +
         CASE WHEN Air_Pollution_Exposure = 'High' THEN 3 
              WHEN Air_Pollution_Exposure = 'Medium' THEN 1 
              ELSE 0 END
        ) AS Risk_Score
    FROM lung_cancer_data1
) AS Risk
;
-- Data Pre-processing and Cleaning(Handle Missing Data, Remove Duplicates,Convert Data Types etc)
SELECT ID, COUNT(*) AS Duplicates
FROM lung_cancer_data1
GROUP BY ID
HAVING Duplicates > 1
;

DESC lung_cancer_data1
;

SELECT *
FROM lung_cancer_data1
;

SELECT *
